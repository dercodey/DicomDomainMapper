// <auto-generated />
using System;
using Elekta.Capability.Dicom.Infrastructure.EFModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Elekta.Capability.Dicom.Infrastructure.Migrations
{
    [DbContext(typeof(DicomDbContext))]
    partial class DicomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomAttribute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DicomInstanceId")
                        .HasColumnType("int");

                    b.Property<string>("DicomTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DicomInstanceId");

                    b.ToTable("DicomElements");
                });

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomInstance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DicomSeriesId")
                        .HasColumnType("int");

                    b.Property<string>("SopInstanceUid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DicomSeriesId");

                    b.ToTable("DicomInstances");
                });

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomSeries", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcquisitionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpectedInstanceCount")
                        .HasColumnType("int");

                    b.Property<string>("Modality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesInstanceUid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DicomSeries");
                });

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomAttribute", b =>
                {
                    b.HasOne("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomInstance", "DicomInstance")
                        .WithMany("DicomElements")
                        .HasForeignKey("DicomInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DicomInstance");
                });

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomInstance", b =>
                {
                    b.HasOne("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomSeries", "DicomSeries")
                        .WithMany("DicomInstances")
                        .HasForeignKey("DicomSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DicomSeries");
                });

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomInstance", b =>
                {
                    b.Navigation("DicomElements");
                });

            modelBuilder.Entity("Elekta.Capability.Dicom.Infrastructure.EFModel.DicomSeries", b =>
                {
                    b.Navigation("DicomInstances");
                });
#pragma warning restore 612, 618
        }
    }
}

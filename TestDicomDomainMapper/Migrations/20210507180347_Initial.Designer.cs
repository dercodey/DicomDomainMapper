// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestDicomDomainMapper.EFModel;

namespace TestDicomDomainMapper.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210507180347_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomAttribute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DicomInstanceId")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DicomInstanceId");

                    b.ToTable("DicomAttributes");
                });

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomInstance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DicomSeriesId")
                        .HasColumnType("int");

                    b.Property<string>("SopInstanceUid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DicomSeriesId");

                    b.ToTable("DicomInstances");
                });

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomSeries", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcquisitionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesInstanceUid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DicomSeries");
                });

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomAttribute", b =>
                {
                    b.HasOne("TestDicomDomainMapper.EFModel.DicomInstance", "DicomInstance")
                        .WithMany("Attributes")
                        .HasForeignKey("DicomInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DicomInstance");
                });

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomInstance", b =>
                {
                    b.HasOne("TestDicomDomainMapper.EFModel.DicomSeries", "DicomSeries")
                        .WithMany("Instances")
                        .HasForeignKey("DicomSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DicomSeries");
                });

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomInstance", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("TestDicomDomainMapper.EFModel.DicomSeries", b =>
                {
                    b.Navigation("Instances");
                });
#pragma warning restore 612, 618
        }
    }
}
